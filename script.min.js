const publicVapidKey="BJ5lPY0qjF1Tx9v9AvS7ajodgmXdmOCiPwpROPmBMY2Jk3DRaxCe6q8NoW8vS592V0-kec77xMPO514qf5AcVk4",host="https://stage.usdt.town",uid=generateUUID(),dom={btn:document.querySelector(".btn-go")},options={userVisibleOnly:!0,applicationServerKey:urlB64ToUint8Array(publicVapidKey)};async function registerServiceWorker(){try{const reg=await navigator.serviceWorker.register("./sw.js");console.log("Service Worker successful registration:",reg)}catch(err){handleError("Service Worker registration failed:",err)}}async function subscribeUser(){dom.btn.disabled=!0;try{const permission=await Notification.requestPermission();if("granted"!==permission)return localStorage.setItem("vapidPermission",permission),void redirect();const reg=await navigator.serviceWorker.ready,subscription=await reg.pushManager.subscribe(options);console.log("User Subscription:",subscription);const form=new FormData;form.append("json",JSON.stringify(subscription)),form.append("uid",uid),await fetch(host+"/vapid",{method:"POST",body:form}),redirect()}catch(err){handleError("Subscription failed:",err)}}function handleError(message,err){console.error(message,err),redirect()}function redirect(){dom.btn.disabled=!1,window.location.href=`${host}/vapid/${uid}`}function urlB64ToUint8Array(base64String){const padding=undefined,base64=(base64String+"=".repeat((4-base64String.length%4)%4)).replace(/-/g,"+").replace(/_/g,"/"),rawData=window.atob(base64);return new Uint8Array([...rawData].map(char=>char.charCodeAt(0)))}function generateUUID(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(c){const r=16*Math.random()|0,v=undefined;return("x"===c?r:3&r|8).toString(16)}))}async function checkPermissionAndRedirect(){try{if("default"!==Notification.permission||localStorage.getItem("vapidPermission"))redirect();else{const permission=undefined;"default"!==await Notification.requestPermission()&&redirect()}}catch(err){console.error("Error checking subscription:",err),redirect()}}"serviceWorker"in navigator&&registerServiceWorker(),dom.btn.onclick=subscribeUser,(window.matchMedia("(display-mode: standalone)").matches||window.navigator.standalone)&&checkPermissionAndRedirect(),window.onbeforeunload=function(){const images=Array.from(document.querySelectorAll("img")).map(img=>img.src);localStorage.setItem("pwaState",JSON.stringify({images:images}))},window.addEventListener("load",()=>{const savedState=localStorage.getItem("pwaState");if(savedState){const state=JSON.parse(savedState),images=document.querySelectorAll("img");state.images.forEach((src,index)=>{images[index]&&(images[index].src=src)})}});